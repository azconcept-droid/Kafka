version: '2'

services: 
  zookeeper: 
    image: confluentinc/cp-zookeeper:latest 
    hostname: zookeeper 
    container_name: zookeeper 
    ports: 
      - '2181:2181' 
    environment: 
      ZOOKEEPER_CLIENT_PORT: '2181' 
      ZOOKEEPER_TICK_TIME: '2000' 
      KAFKA_OPTS: '-Djava.security.auth.login.config=/etc/kafka/server-jaas.conf -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider' 
    volumes: 
      - ./server-jaas.conf:/etc/kafka/server-jaas.conf:ro,z 

  kafka1: 
    image: confluentinc/cp-kafka:5.4.2
    hostname: kafka1 
    container_name: kafka1 
    labels: 
      - 'custom.project=kafkajs' 
      - 'custom.service=kafka1' 
    depends_on: 
      - zookeeper 
    ports: 
      - '29092:29092' 
      - '9092:9092' 
      - '29093:29093' 
      - '9093:9093' 
      - '29094:29094' 
      - '9094:9094' 
    environment: 
      KAFKA_BROKER_ID: '0' 
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL,SASL_SSL:SASL_SSL,SASL_SSL_HOST:SASL_SSL 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://kafka1:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true' 
      KAFKA_DELETE_TOPIC_ENABLE: 'true' 
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0' 
      # KAFKA_SSL_KEYSTORE_FILENAME: 'kafka.server.keystore.jks' 
      # KAFKA_SSL_KEYSTORE_CREDENTIALS: 'keystore_creds' 
      # KAFKA_SSL_KEY_CREDENTIALS: 'sslkey_creds' 
      # KAFKA_SSL_TRUSTSTORE_FILENAME: 'kafka.server.truststore.jks' 
      # KAFKA_SSL_TRUSTSTORE_CREDENTIALS: 'truststore_creds' 
      # KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: 'PLAIN' 
      # KAFKA_SASL_ENABLED_MECHANISMS: 'PLAIN,SCRAM-SHA-256,SCRAM-SHA-512' 
      KAFKA_OPTS: '-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf' 
      # suppress verbosity 
      # https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template 
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO' 
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false' 
    volumes: 
      # - ./testHelpers/certs/kafka.server.keystore.jks:/etc/kafka/secrets/kafka.server.keystore.jks:ro,z 
      # - ./testHelpers/certs/kafka.server.truststore.jks:/etc/kafka/secrets/kafka.server.truststore.jks:ro,z 
      # - ./keystore_creds:/etc/kafka/secrets/keystore_creds:ro,z 
      # - ./sslkey_creds:/etc/kafka/secrets/sslkey_creds:ro,z 
      # - ./truststore_creds:/etc/kafka/secrets/truststore_creds:ro,z 
      - ./server-jaas.conf:/opt/kafka/config/server-jaas.conf:ro,z

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka1
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: test-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka1:9092"
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka1:9092, PLAINTEXT_HOST://localhost:9092'
      KAFKAJS_NO_PARTITIONER_WARNING: 1
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
      DYNAMIC_CONFIG_ENABLED: true

# docker run -p 9092:9092 \
# -e KAFKA_ZOOKEEPER_CONNECT=192.168.43.230:2181 \
# -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.43.230:9092 \
# -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
# confluentinc/cp-kafka

# 192.168.43.230